package views;

/**
 * Frame to display the journal and allow edits.
 *
 * @author John D. Miller
 * @version 1.0.2
 * @since 01/07/2016
 */
        import models.Waste;

        import java.awt.Toolkit;
        import java.text.DateFormat;
        import java.text.DecimalFormat;
        import java.text.NumberFormat;
        import java.text.ParseException;
        import java.util.ArrayList;
        import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chefj
 */
public class JournalFrame extends javax.swing.JFrame {

    ArrayList<Waste> wasteList;
    ArrayList<Integer> indexList;
    private final NumberFormat percentFormatter = new DecimalFormat("#.##%");
    private final DateFormat dateFormatter = DateFormat.getDateInstance(DateFormat.DEFAULT);

    /**
     * Creates new form JournalFrame
     *
     * @param wasteList the ArrayList of waste objects.
     */
    public JournalFrame(ArrayList<Waste> wasteList) {
        initComponents();
        setTitle("Your Journal");
        setResizable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setAlwaysOnTop(true);
//        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("recycle.png")));
        this.wasteList = wasteList;
        displayJournal();
        //removeButton.setEnabled(false);
    }

    private void displayJournal() {
        DefaultTableModel model = (DefaultTableModel) journalTable.getModel();

        String date = wasteList.get(0).getDate();
        Object[] emptyRow = {""};
        for (Waste w : wasteList) {
            if (!w.getDate().equals(date)) {
                date = w.getDate();
                model.addRow(emptyRow);
            }
            Object[] row = {w.getDate(), w.getWasteMaterial(), w.getWasteCategory(), w.getAmount(), w.getPercent()};
            model.addRow(row);
        }
        journalTable.setModel(model);

        // Calculating Percentages
        //setPercentages(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        journalTable = new javax.swing.JTable();
        removeButton = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        journalTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Date", "Material", "Category", "Amount", "Percent"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        journalTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(journalTable);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        buttonUpdate.setText("Update");
        buttonUpdate.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                        .addComponent(buttonUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // Finding Selected Rows
        DefaultTableModel model = (DefaultTableModel) journalTable.getModel();
        int[] rows = journalTable.getSelectedRows();

        // Removing Rows
        for (int i = 0; i < rows.length; i++) {
            if (model.getValueAt(i, 0).toString() == null) {
            } else {
                model.removeRow(rows[i] - i);
            }
        }
        // Recalculating Percentages
        setPercentages(model);
    }

    /**
     * Calculates and sets percentages for total column.
     *
     * @param model the JTable model.
     */
    private void setPercentages(DefaultTableModel model) {
        indexList = new ArrayList<>();

        // Updating Percentage Column
        double total = 0;
        String date = model.getValueAt(0, 0).toString();
        String auditDate = "";
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).toString() == null) {
            } else {
                // Incrementing total and storing indicies
                while (date.equals(auditDate)) {
                    // Incrementing audit total
                    total += Double.parseDouble((String) model.getValueAt(i, 2).toString());
                    indexList.add(i);

                }
                // Setting percentages
                for (Integer index : indexList) {
                    model.setValueAt(((percentFormatter.format(Double.parseDouble((String) model.getValueAt(index, 2).toString()) / total))), index, 3);
                }

                // Resetting for next audit
                total = 0;
                indexList = new ArrayList<>();
            }
        }
    }

    /**
     * Determines if a line is a date.
     *
     * @param line the line to be evaluated.
     * @return true or false.
     */
    private Boolean isDate(String line) {
        try {
            dateFormatter.parse(line);
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    // Variables declaration - do not modify
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable journalTable;
    private javax.swing.JButton removeButton;
    // End of variables declaration
}